协议（Protocol）是 Swift 中的一个重要概念。它是定义方法、属性或其他要求的抽象类型。协议定义了要求，并允许类、结构体或枚举满足这些要求。协议支持多重继承，因此可以同时采用一个或多个协议。

协议通常用于以下情况：

代码复用 - 使用协议可以在不同类型之间共享相同的行为。例如，多个类可能执行相同的操作，但需要以不同的方式工作。通过使用协议，可以定义通用行为。
多态性（Polymorphism） - 使用协议可以让接收相同方法调用的对象执行不同的操作。这提高了代码的灵活性，并简化了对象之间的交互。
委托（Delegation） - 可以使用协议来实现委托。委托是一种设计模式，其中一个对象将一些责任委托给另一个对象。例如，在表视图中实现数据源和委托方法。
灵活的代码设计 - 协议使代码更灵活。可以将重点放在对象的行为而不是类型上。
协议在 Swift 语言中非常重要，用于提高代码的重用性和灵活性。
