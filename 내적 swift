
길이가 같은 두 1차원 정수 배열 a, b가 매개변수로 주어집니다. a와 b의 내적을 return 하도록 solution 함수를 완성해주세요.
이때, a와 b의 내적은 a[0]*b[0] + a[1]*b[1] + ... + a[n-1]*b[n-1] 입니다. (n은 a, b의 길이)
제한사항
a, b의 길이는 1 이상 1,000 이하입니다.
a, b의 모든 수는 -1,000 이상 1,000 이하입니다.
입출력 예
a	b	result
[1,2,3,4]	[-3,-1,0,2]	3
[-1,0,1]	[1,0,-1]	-2
입출력 예 설명
입출력 예 #1
a와 b의 내적은 1*(-3) + 2*(-1) + 3*0 + 4*2 = 3 입니다.
입출력 예 #2
a와 b의 내적은 (-1)*1 + 0*0 + 1*(-1) = -2 입니다.




import Foundation

func solution(_ a:[Int], _ b:[Int]) -> Int {
    return zip(a, b).map(*).reduce(0, +)
}



這段程式碼是一個 Swift 函式，接受兩個陣列 a 和 b，每個陣列都包含整數。這個函式的目的是計算兩個陣列對應位置元素的乘積之和。

讓我們逐步解釋這段程式碼：

func solution(_ a:[Int], _ b:[Int]) -> Int {：定義了一個名為 solution 的函式，它接受兩個參數 a 和 b，它們都是整數型數組。該函式返回一個整數。
zip(a, b)：zip 函式將兩個數組結合成一個由元組組成的序列，其中每個元組包含來自兩個數組相同位置的元素。
.map(*)：map 函式將一個函數應用於序列的每個元素。在這裡，使用了操作符 *，這表示對應位置的元素相乘。
.reduce(0, +)：reduce 函式將序列的所有元素進行組合，產生一個單一的結果。在這裡，它將使用 + 操作符將所有乘積相加起來，並以 0 為起始值。
綜合起來，這個函式的作用是計算兩個數組 a 和 b 中相對應位置元素的乘積之和。該函式返回這個乘積之和作為結果。
