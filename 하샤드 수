오늘 하샤드 수의 정의 이해했고 String통해서 if 쓰는법 배웠습니다.


양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.
제한 조건
x는 1 이상, 10000 이하인 정수입니다. 

answer


func solution(_ x:Int) -> Bool {
  var sum = 0
  for i in String(x) {
    guard let number = Int(String(i)) else { break }
    sum += number
  }
  return x % sum == 0
}

这个函数的目标是检查给定的自然数 x 是否为哈希德数。

将 x 转换为字符串，以便使用 for 循环逐个处理每个数字。
在循环中，将每个字符再次转换为整数，并累加到 sum 变量中。
返回 x 是否能够被 sum 整除的结果，如果可以，说明 x 是哈希德数。
在上面的例子中，函数 solution 检查给定的整数 x 是否为哈希德数，并返回相应的布尔值。





哈布德数（Harshad number）是指一个自然数，它可以被它的各位数字的和整除。哈布德数是数学中的一个概念，也被称为“噶瑪数”（Niven number）。

更具体地说，一个数 x 是哈布德数，当且仅当 x 可以被它的各位数字的和整除，即 x 对各位数字的和取模为零。例如，18 是一个哈布德数，因为 1 + 8 = 9，而 18 可以被 9 整除。

哈布德数的概念可以追溯到印度数学家卡皮拉（Kāpila），他在《剩馀數學》（Sulba Sutras）中提到了哈布德数。这个概念后来由伊利诺伊大学的数学家伊文·诺文（Ivan Niven）推广，因此哈布德数也被称为“噶瑪数”。

在编写计算哈布德数的函数时，通常会按照题目描述中的步骤，将数字的各位数字提取并求和，然后判断原数字是否能被这个和整除。
