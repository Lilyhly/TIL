

단어 s의 가운데 글자를 반환하는 함수, solution을 만들어 보세요. 단어의 길이가 짝수라면 가운데 두글자를 반환하면 됩니다.
재한사항
s는 길이가 1 이상, 100이하인 스트링입니다.
입출력 예
s	return
"abcde"	"c"
"qwer"	"we"



func solution(_ s:String) -> String {
    if Array(s).count % 2 == 0 {
        return String(Array(s)[(s.count/2)-1...(s.count/2)])
    } else {
        return String(Array(s)[s.count/2])
    }
} 


这个函数的目的是返回给定字符串 s 的中间字符或字符对。下面是对函数的解释：

if Array(s).count % 2 == 0: 检查字符串 s 的长度是否为偶数。
如果是偶数，执行以下代码块，否则执行 else 代码块。
return String(Array(s)[(s.count/2)-1...(s.count/2)]): 如果字符串长度是偶数，返回中间两个字符。
Array(s): 将字符串 s 转换为字符数组。
s.count/2: 找到字符串中间位置的索引。
[(s.count/2)-1...(s.count/2)]: 使用半开区间运算符 ... 获取从字符串中间位置前一个到中间位置的字符子数组。
String(...): 将字符子数组转换回字符串。
return String(Array(s)[s.count/2]): 如果字符串长度是奇数，返回中间字符。
Array(s): 将字符串 s 转换为字符数组。
s.count/2: 找到字符串中间位置的索引。
Array(s)[s.count/2]: 获取中间位置的字符。
String(...): 将字符转换回字符串。
这个函数的作用类似于获取字符串的中位数或中间两个字符，具体取决于字符串的长度是奇数还是偶数。注意，这里返回的是字符串，即使是一个字符也被当做字符串处理。

 return String(Array(s)[(s.count/2)-1...(s.count/2)]) 為什麼是-1 不是＋1？


这里使用 (s.count/2)-1 的原因是，索引是从0开始的。考虑一个简单的例子：

假设字符串的长度是4，字符索引分别是0、1、2、3。如果你想找到中间的两个字符，你会取索引为1和2的字符。中间位置的索引是 (4/2)-1，这样计算得到的是1。

因此，对于偶数长度的字符串，我们需要考虑的索引是 (s.count/2)-1 和 (s.count/2)。这两个索引分别对应了中间两个字符的位置。如果直接使用 (s.count/2)，你会得到右侧中间字符的索引，而 -1 部分是为了得到左侧中间字符的索引。
